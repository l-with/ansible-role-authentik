---

- name: Ensure software-properties-common is installed
  ansible.builtin.apt:
    name: software-properties-common

- name: Ensure python is installed
  ansible.builtin.apt:
    name: python3

- name: Ensure pip is installed
  ansible.builtin.apt:
    name: python3-pip

- name: Ensure Python library docker
  ansible.builtin.pip:
    name: docker

- name: Ensure Python library docker-compose
  ansible.builtin.pip:
    name: docker-compose

- name: Ensure authentik is installed with docker-compose
  community.docker.docker_compose:
    project_name: authentik
    state: "{{ authentik_docker_compose_state }}"
    definition:
      services:
        postgresql:
          image: postgres:12-alpine
          restart: unless-stopped
          volumes:
            - database:/var/lib/postgresql/data
          environment:
            POSTGRES_USER:     "{{ authentik_postgres_user }}"
            POSTGRES_PASSWORD: "{{ authentik_postgres_password }}"
            POSTGRES_DB:       "{{ authentik_postgres_db }}"
          env_file:
            - .env
        redis:
          image: redis:alpine
          restart: unless-stopped
        server:
          image:   "{{ authentik_image }}:{{ authentik_tag }}"
          restart: unless-stopped
          command: server
          environment:
            AUTHENTIK_REDIS__HOST:          redis
            AUTHENTIK_POSTGRESQL__HOST:     postgresql
            AUTHENTIK_POSTGRESQL__USER:     "{{ authentik_postgres_user }}"
            AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_postgres_password }}"
            AUTHENTIK_POSTGRESQL__NAME:     "{{ authentik_postgres_db }}"
            AUTHENTIK_BOOTSTRAP_PASSWORD:   "{{ authentik_bootstrap_password }}"
            AUTHENTIK_BOOTSTRAP_TOKEN:      "{{ authentik_bootstrap_token }}"
            # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
            # WORKERS: 2
          volumes:
            - ./media:/media
            - ./custom-templates:/templates
            - geoip:/geoip
          env_file:
            - .env
          ports:
            - "0.0.0.0:{{ authentik_port_http }}:9000"
            - "0.0.0.0:{{ authentik_port_https }}:9443"
        worker:
          image:   "{{ authentik_image }}:{{ authentik_tag }}"
          restart: unless-stopped
          command: worker
          environment:
            AUTHENTIK_REDIS__HOST: redis
            AUTHENTIK_POSTGRESQL__HOST:     postgresql
            AUTHENTIK_POSTGRESQL__USER:     "{{ authentik_postgres_user }}"
            AUTHENTIK_POSTGRESQL__PASSWORD: "{{ authentik_postgres_password }}"
            AUTHENTIK_POSTGRESQL__NAME:     "{{ authentik_postgres_db }}"
            # AUTHENTIK_ERROR_REPORTING__ENABLED: "true"
            # This is optional, and can be removed. If you remove this, the following will happen
            # - The permissions for the /media folders aren't fixed, so make sure they are 1000:1000
            # - The docker socket can't be accessed anymore
          user: root
          volumes:
            - ./media:/media
            - ./certs:/certs
            - /var/run/docker.sock:/var/run/docker.sock
            - ./custom-templates:/templates
            - geoip:/geoip
          env_file:
            - .env
        geoipupdate:
          image: "maxmindinc/geoipupdate:latest"
          volumes:
            - "geoip:/usr/share/GeoIP"
          environment:
            GEOIPUPDATE_EDITION_IDS: "GeoLite2-City"
            GEOIPUPDATE_FREQUENCY: "8"
          env_file:
            - .env
      volumes:
        database:
          driver: local
        geoip:
          driver: local

...
